# Delete the `my_index` index
DELETE /my_index

# Create `my_index` with a single primary shard
PUT /my_index
{ "settings": { "number_of_shards": 1 }}

# Index some example docs
POST /my_index/my_type/_bulk
{ "index": { "_id": 1 }}
{ "title": "The quick brown fox" }
{ "index": { "_id": 2 }}
{ "title": "The quick brown fox jumps over the lazy dog" }
{ "index": { "_id": 3 }}
{ "title": "The quick brown fox jumps over the quick dog" }
{ "index": { "_id": 4 }}
{ "title": "Brown fox brown dog" }

# Single word match query
GET /my_index/my_type/_search
{
  "query": {
    "match": {
      "title": "QUICK!"
    }
  }
}

# Multi-word match query
GET /my_index/my_type/_search
{
  "query": {
    "match": {
      "title": "BROWN DOG!"
    }
  }
}

# Operator `and`
GET /my_index/my_type/_search
{
  "query": {
    "match": {
      "title": {
        "query": "BROWN DOG!",
        "operator": "and"
      }
    }
  }
}

# Minimum should match
GET /my_index/my_type/_search
{
  "query": {
    "match": {
      "title": {
        "query": "quick brown dog",
        "minimum_should_match": "75%"
      }
    }
  }
}

# ------------------------
# Delete the `my_index` index
DELETE /my_index

# Create `my_index` with a single primary shard
PUT /my_index
{ "settings": { "number_of_shards": 1 }}

# Index some example docs
POST /my_index/my_type/_bulk
{"index":{"_id":1}}
{"content":"Full text search is great"}
{"index":{"_id":2}}
{"content":"Full text search with Lucene"}
{"index":{"_id":3}}
{"content":"Full text search with Elasticsearch"}
{"index":{"_id":4}}
{"content":"Full text search with Lucene and Elasticsearch"}


# "Lucene" and "Elasticsearch" have the same boost
GET /_search
{
  "query": {
    "bool": {
      "must": {
        "match": {
          "content": {
            "query": "full text search",
            "operator": "and"
          }
        }
      },
      "should": [
        {
          "match": {
            "content": "Elasticsearch"
          }
        },
        {
          "match": {
            "content": "Lucene"
          }
        }
      ]
    }
  }
}

# "Elasticsearch" has a higher boost than "Lucene"
GET /_search
{
  "query": {
    "bool": {
      "must": {
        "match": {
          "content": {
            "query": "full text search",
            "operator": "and"
          }
        }
      },
      "should": [
        {
          "match": {
            "content": {
              "query": "Elasticsearch",
              "boost": 3
            }
          }
        },
        {
          "match": {
            "content": {
              "query": "Lucene",
              "boost": 2
            }
          }
        }
      ]
    }
  }
}

# -------------------------------
# Delete the `my_index` index
DELETE /my_index

# Create `my_index` with a single primary shard
PUT /my_index
{ "settings": { "number_of_shards": 1 }}

# Index some example docs
POST /my_index/my_type/_bulk
{ "index": { "_id": 1 }}
{ "title": "The quick brown fox" }
{ "index": { "_id": 2 }}
{ "title": "The quick brown fox jumps over the lazy dog" }
{ "index": { "_id": 3 }}
{ "title": "The quick brown fox jumps over the quick dog" }
{ "index": { "_id": 4 }}
{ "title": "Brown fox brown dog" }

# match_phrase query
GET /my_index/my_type/_search
{
  "query": {
    "match_phrase": {
      "title": "quick brown fox"
    }
  }
}

# match query, type phrase
GET /my_index/my_type/_search
{
  "query": {
    "match": {
      "title": {
        "type": "phrase",
        "query": "quick brown fox"
      }
    }
  }
}


# ------------------------
# Delete the `my_index` index
DELETE /my_index

# Create `my_index` with a single primary shard
PUT /my_index
{ "settings": { "number_of_shards": 1 }}

# Index some example docs
POST /my_index/my_type/_bulk
{ "index": { "_id": 1 }}
{ "title": "The quick brown fox" }
{ "index": { "_id": 2 }}
{ "title": "The quick brown fox jumps over the lazy dog" }
{ "index": { "_id": 3 }}
{ "title": "The quick brown fox jumps over the quick dog" }
{ "index": { "_id": 4 }}
{ "title": "Brown fox brown dog" }


# Phrase query - doesn't match
GET /my_index/my_type/_search
{
  "query": {
    "match_phrase": {
      "title": {
        "query": "quick fox"
      }
    }
  }
}


# Proximity query with slop - matches
GET /my_index/my_type/_search
{
  "query": {
    "match_phrase": {
      "title": {
        "query": "quick fox",
        "slop": 1
      }
    }
  }
}
